// <auto-generated />
using LeighBriodyQuoteAPIV1.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeighBriodyQuoteAPIV1.Migrations
{
    [DbContext(typeof(QuoteContext))]
    [Migration("20211118163606_firsr")]
    partial class firsr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LeighBriodyQuoteAPIV1.Model.Quote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuoteText")
                        .HasColumnType("TEXT");

                    b.Property<int>("quoteTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("quoteTypeId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("LeighBriodyQuoteAPIV1.Model.QuoteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuoteTypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("QuoteTypes");
                });

            modelBuilder.Entity("LeighBriodyQuoteAPIV1.Model.Quote", b =>
                {
                    b.HasOne("LeighBriodyQuoteAPIV1.Model.QuoteType", "quoteType")
                        .WithMany()
                        .HasForeignKey("quoteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("quoteType");
                });
#pragma warning restore 612, 618
        }
    }
}
